---
- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml
  any_errors_fatal: true

- name: Role Provisioning
  when: inventory_hostname in k3s_map.server.hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        timeout: 30
      any_errors_fatal: true

    - name: Install binary
      ansible.builtin.get_url:
        url: "{{ longhorn_project.release.url }}/{{ longhorn_project.release.file }}"
        checksum: sha256:{{ longhorn_project.release.url }}/{{ longhorn_project.release.file }}.sha256
        dest: "{{ k3s_map.node.directory.bin }}/longhornctl"
        owner: root
        group: root
        mode: "755"
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Chart Setup
      run_once: true
      block:
        - name: Validate Chart
          include_tasks: roles/_common/tasks/validate_chart.yaml
          vars:
            project_url: "{{ longhorn_project.url }}/{{ longhorn_project.tag }}"
            repository_name: "{{ longhorn_vars.kubernetes.helm.repository.org }}"
            repository_url: "{{ longhorn_vars.kubernetes.helm.repository.url }}"
            chart_name: "{{ longhorn_vars.kubernetes.helm.chart.name }}"
            chart_namespace: "{{ longhorn_vars.kubernetes.namespace }}"
            chart_version_value: "{{ longhorn_map.helm.chart.version }}"

        - name: Create backup credentials secret
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'credentials.j2') | from_yaml }}"
            kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
            wait: true
          when:
            - longhorn_vars.kubernetes.backup.enabled is truthy
            - longhorn_vars.kubernetes.backup.target[:3] | lower != 'nfs'
          no_log: true

        - name: Create encryption secret
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'encryption-secret.yaml.j2') | from_yaml }}"
            kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
            wait: true
          when: longhorn_vars.encryption.enabled | bool
          no_log: true

        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            longhorn_postinstall: false

        - name: Install chart
          include_tasks: roles/_common/tasks/upgrade_chart.yaml
          vars:
            chart_ref: "{{ longhorn_map.helm.chart.reference }}"
            chart_version: "{{ longhorn_vars.kubernetes.helm.chart.version }}"
            chart_name: "{{ longhorn_vars.kubernetes.helm.chart.name }}"
            chart_namespace: "{{ longhorn_vars.kubernetes.namespace }}"
            chart_timeout: "{{ longhorn_map.helm.timeout }}"
            chart_values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"

        - name: Create encrypted storage class
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'storageclass-encrypted.yaml.j2') | from_yaml }}"
            kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
            wait: true
          when: longhorn_vars.encryption.enabled | bool

        - name: Create key rotation cronjob
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'key-rotation.yaml.j2') | from_yaml }}"
            kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
            wait: true
          when: longhorn_vars.encryption.enabled | bool
          register: key_rotation_result

        - name: Notify about key rotation setup
          ansible.builtin.debug:
            msg: |
              Longhorn encryption key rotation has been configured.
              - Schedule: Every 3 months
              - Implementation is phased and includes safety checks
              - System volumes are handled separately with extra verification
              - Volumes are processed in small batches with stabilization periods
          when: longhorn_vars.encryption.enabled | bool and key_rotation_result.changed

        - name: Gateway Setup
          when:
            - longhorn_vars.kubernetes.frontend.ingress.enabled is falsy
            - externaldns_vars.cloudflare.host.domain | lower != 'disabled'
          include_role:
            name: gateway
          vars:
            gateway_name: "{{ longhorn_vars.kubernetes.frontend.gateway.service }}"
            gateway_namespace: "{{ longhorn_vars.kubernetes.namespace }}"
            gateway_subdomain: "{{ longhorn_map.gateway.frontend.hostname | regex_replace('\\..*$', '') }}"
            gateway_access: "{{ longhorn_vars.kubernetes.service_access | default(global_map.services.default_access) }}"
            backend_service_name: "{{ longhorn_vars.kubernetes.frontend.gateway.service }}"
            backend_service_port: 80
            gateway_annotations: "{{ longhorn_map.gateway.frontend.annotations | default({}) }}"

- name: Verify Longhorn Deployment
  run_once: true
  include_role:
    name: verification
  vars:
    component_name: "Longhorn Manager"
    component_namespace: "{{ longhorn_vars.kubernetes.namespace }}"
    component_type: "deployment"
    component_value: "longhorn-driver-deployer"
    verification_retries: 45
    verification_delay: 20
  when:
    - inventory_hostname in k3s_map.server.hosts
    - lookup('env', 'SKIP_VERIFICATION') | default('false') | lower != 'true'
