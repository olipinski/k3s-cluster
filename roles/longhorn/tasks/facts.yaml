---
- name: Set map fact
  ansible.builtin.set_fact:
    longhorn_map:
      credentials:
        backup:
          secret: "{{ longhorn_vars.kubernetes.helm.chart.name }}-backup-credentials"
      directory:
        data: /var/lib/longhorn
      helm:
        chart:
          reference: "{{ longhorn_vars.kubernetes.helm.repository.org }}/{{ longhorn_vars.kubernetes.helm.chart.name }}"
          version: "{{ longhorn_vars.kubernetes.helm.chart.version[1:] }}"
        platform:
          key: https://github.com
          raw: https://raw.githubusercontent.com
        repository:
          name: "{{ longhorn_vars.kubernetes.helm.repository.org }}/{{ longhorn_vars.kubernetes.helm.repository.name }}"
        timeout: 5m0s
      gateway:
        frontend:
          annotations:
            cert-manager.io/cluster-issuer: "{{ externaldns_project.cloudflare.cluster.issuer }}"
          hostname: "{{ longhorn_vars.kubernetes.frontend.gateway.subdomain }}.{{ externaldns_vars.cloudflare.host.domain }}"
          http_route:
            insecure: "{{ longhorn_vars.kubernetes.frontend.gateway.service }}-http"
            secure: "{{ longhorn_vars.kubernetes.frontend.gateway.service }}-https"
      metrics:
        service:
          monitor:
            enabled: true
            scrape:
              # If `null`, default value is `victoriametrics_map.service.monitor.scrape.interval`
              interval: null
              # If `null`, default value is `victoriametrics_map.service.monitor.scrape.timeout`
              timeout: null
  run_once: true

- name: Set project fact
  ansible.builtin.set_fact:
    longhorn_project:
      release:
        file: "{{ longhorn_vars.release.file_map[ansible_architecture] }}"
        url: "{{
          '/'.join([longhorn_map.helm.platform.key,
          longhorn_vars.release.repository.org,
          longhorn_vars.release.repository.name, 'releases', 'download'])
          }}"
      tag: "{{ longhorn_vars.kubernetes.helm.chart.version }}"
      url: "{{ longhorn_map.helm.platform.key }}/{{ longhorn_map.helm.repository.name }}/releases/tag"
  run_once: true

- name: Check encryption configuration
  kubernetes.core.k8s_info:
    kind: Secret
    name: "{{ longhorn_vars.kubernetes.encryption.secret_name }}"
    namespace: "{{ longhorn_vars.kubernetes.namespace }}"
    kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
  register: encryption_secret
  ignore_errors: true
  when:
    - inventory_hostname in k3s_map.server.hosts
    - longhorn_vars.kubernetes.encryption.enabled is truthy
  run_once: true

- name: Set encryption status fact
  ansible.builtin.set_fact:
    longhorn_encryption_configured: "{{ encryption_secret.resources is defined and encryption_secret.resources | length > 0 }}"
  when:
    - inventory_hostname in k3s_map.server.hosts
    - longhorn_vars.kubernetes.encryption.enabled is truthy
  run_once: true
