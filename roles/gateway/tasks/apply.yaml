---
- name: Create Gateway for {{ gateway_name }}
  kubernetes.core.k8s:
    kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: Gateway
      metadata:
        annotations:
          {% if gateway_access | default(global_map.services.default_access) == "internal" %}
          external-dns.alpha.kubernetes.io/exclude: "true"
          {% else %}
          cert-manager.io/cluster-issuer: "{{ externaldns_project.cloudflare.cluster.issuer }}"
          {% endif %}
          {% if gateway_annotations is defined %}
          {% for key, value in gateway_annotations.items() %}
          {{ key }}: {{ value }}
          {% endfor %}
          {% endif %}
        name: {{ gateway_name }}
        namespace: {{ gateway_namespace }}
      spec:
        gatewayClassName: cilium
        listeners:
          - allowedRoutes:
              kinds:
                - group: gateway.networking.k8s.io
                  kind: HTTPRoute
              namespaces:
                from: Same
            hostname: {{ gateway_subdomain }}.{% if gateway_access | default(global_map.services.default_access) == "internal" %}{{ global_map.domains.internal }}{% else %}{{ global_map.domains.external }}{% endif %}
            name: http
            port: 80
            protocol: HTTP
          - allowedRoutes:
              kinds:
                - group: gateway.networking.k8s.io
                  kind: HTTPRoute
              namespaces:
                from: Same
            hostname: {{ gateway_subdomain }}.{% if gateway_access | default(global_map.services.default_access) == "internal" %}{{ global_map.domains.internal }}{% else %}{{ global_map.domains.external }}{% endif %}
            name: https
            port: 443
            protocol: HTTPS
            tls:
              certificateRefs:
                - kind: Secret
                  {% if gateway_access | default(global_map.services.default_access) == "internal" %}
                  name: {{ global_map.services.wildcard_cert.name }}
                  {% else %}
                  name: {{ externaldns_vars.cloudflare.prefix }}-{{ gateway_name }}
                  {% endif %}
              mode: Terminate
    wait: true

- name: Create Insecure HTTP Route
  kubernetes.core.k8s:
    kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: {{ gateway_name }}-http
        namespace: {{ gateway_namespace }}
      spec:
        hostnames:
          - {{ gateway_subdomain }}.{% if gateway_access | default(global_map.services.default_access) == "internal" %}{{ global_map.domains.internal }}{% else %}{{ global_map.domains.external }}{% endif %}
        parentRefs:
          - kind: Gateway
            name: {{ gateway_name }}
            namespace: {{ gateway_namespace }}
            sectionName: http
        rules:
          - filters:
              - requestRedirect:
                  scheme: https
                  statusCode: 301
                type: RequestRedirect
    wait: true

- name: Create Secure HTTP Route
  kubernetes.core.k8s:
    kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: {{ gateway_name }}-https
        namespace: {{ gateway_namespace }}
      spec:
        hostnames:
          - {{ gateway_subdomain }}.{% if gateway_access | default(global_map.services.default_access) == "internal" %}{{ global_map.domains.internal }}{% else %}{{ global_map.domains.external }}{% endif %}
        parentRefs:
          - kind: Gateway
            name: {{ gateway_name }}
            namespace: {{ gateway_namespace }}
            sectionName: https
        rules:
          - backendRefs:
              - kind: Service
                name: {{ backend_service_name }}
                port: {{ backend_service_port }}
            matches:
              - path:
                  type: PathPrefix
                  value: /
    wait: true