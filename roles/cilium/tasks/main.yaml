---
- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml
  any_errors_fatal: true

- name: Verify Dependencies
  ansible.builtin.import_tasks:
    file: verify_dependencies.yaml
  any_errors_fatal: true

- name: Role Provisioning
  when: inventory_hostname in k3s_map.server.hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        timeout: 30
      any_errors_fatal: true

    - name: Download CLI tools
      include_tasks: cli_tools.yaml

    - name: Add repository
      kubernetes.core.helm_repository:
        name: "{{ cilium_vars.kubernetes.helm.repository.org }}"
        repo_url: "{{ cilium_map.helm.repository.url }}"

    - name: Apply Gateway API CRDs
      kubernetes.core.k8s:
        kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
        src: "{{ cilium_project.release.gateway_api.url }}/{{ cilium_project.release.gateway_api.file }}"
      register: result
      delay: 1
      retries: 3
      until: result is not failed
      run_once: true

    - name: Chart Setup
      run_once: true
      block:
        - name: Set chart parameters
          ansible.builtin.set_fact:
            cilium_setup: true
            cilium_postinstall: false

        - name: Install chart
          include_tasks: roles/_common/tasks/upgrade_chart.yaml
          vars:
            chart_ref: "{{ cilium_map.helm.chart.reference }}"
            chart_version: "{{ cilium_vars.kubernetes.helm.chart.version }}"
            chart_name: "{{ cilium_vars.kubernetes.helm.chart.name }}"
            chart_namespace: "{{ cilium_vars.kubernetes.namespace }}"
            chart_timeout: "{{ cilium_map.helm.timeout }}"
            chart_values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"

        - name: Update chart parameters
          ansible.builtin.set_fact:
            cilium_setup: false

        - name: Update base configuration
          include_tasks: roles/_common/tasks/upgrade_chart.yaml
          vars:
            chart_ref: "{{ cilium_map.helm.chart.reference }}"
            chart_version: "{{ cilium_vars.kubernetes.helm.chart.version }}"
            chart_name: "{{ cilium_vars.kubernetes.helm.chart.name }}"
            chart_namespace: "{{ cilium_vars.kubernetes.namespace }}"
            chart_timeout: "{{ cilium_map.helm.timeout }}"
            chart_values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            reuse_values: true

        - name: Deploy CRDs
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', item) | from_yaml }}"
            kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
            wait: true
          loop:
            - l2_announcement_policy.j2
            - loadbalancer_ip_pool.j2

        - name: Gateway Setup
          when:
            - cilium_vars.kubernetes.hubble.ui.enabled is truthy
            - externaldns_vars.cloudflare.host.domain | lower != 'disabled'
          include_role:
            name: gateway
          vars:
            gateway_name: "{{ cilium_vars.kubernetes.hubble.ui.gateway.service }}"
            gateway_namespace: "{{ cilium_vars.kubernetes.namespace }}"
            gateway_subdomain: "{{ cilium_map.gateway.hubble.ui.hostname | regex_replace('\\..*$', '') }}"
            gateway_access: "{{ cilium_vars.kubernetes.service_access | default(global_map.services.default_access) }}"
            backend_service_name: "{{ cilium_vars.kubernetes.hubble.ui.gateway.service }}"
            backend_service_port: 80
            gateway_annotations: "{{ cilium_map.gateway.hubble.ui.annotations | default({}) }}"

- name: Verify Cilium Deployment
  run_once: true
  include_role:
    name: verification
  vars:
    component_name: "Cilium"
    component_namespace: "{{ cilium_vars.kubernetes.namespace }}"
    component_type: "pod"
    component_label: "k8s-app"
    component_value: "cilium"
    verification_retries: 45
    verification_delay: 15
  when:
    - inventory_hostname in k3s_map.server.hosts
    - lookup('env', 'SKIP_VERIFICATION') | default('false') | lower != 'true'