---
- name: Set map fact
  ansible.builtin.set_fact:
    certmanager_map:
      ca:
        cluster:
          issuer:
            name: "{{ certmanager_vars.kubernetes.helm.chart.name }}-cluster-issuer"
      helm:
        chart:
          reference: "{{ certmanager_vars.kubernetes.helm.repository.org }}/{{ certmanager_vars.kubernetes.helm.chart.name }}"
        platform:
          key: https://github.com
          raw: https://raw.githubusercontent.com
        repository:
          name: "{{ certmanager_vars.kubernetes.helm.repository.name }}/{{ certmanager_vars.kubernetes.helm.chart.name }}"
          url: "{{ certmanager_vars.kubernetes.helm.repository.url }}/{{ certmanager_vars.kubernetes.helm.repository.name }}"
        timeout: 5m0s
      metrics:
        service:
          monitor:
            enabled: true
            scrape:
              # If `null`, default value is `victoriametrics_map.service.monitor.scrape.interval`
              interval: null
              # If `null`, default value is `victoriametrics_map.service.monitor.scrape.timeout`
              timeout: null
  run_once: true

- name: Set project fact
  ansible.builtin.set_fact:
    certmanager_project:
      release:
        checksum: "{{ certmanager_vars.release.version }}/{{ certmanager_vars.release.checksum }}"
        file: "{{ certmanager_vars.release.version }}/{{ certmanager_vars.release.file }}"
        url: "{{
          '/'.join([certmanager_map.helm.platform.key,
          certmanager_vars.release.repository.org,
          certmanager_vars.release.repository.name, 'releases', 'download'])
          }}"
      tag: "{{ certmanager_vars.kubernetes.helm.chart.version }}"
      url: "{{ certmanager_map.helm.platform.key }}/{{ certmanager_map.helm.repository.name }}/releases/tag"
  run_once: true

- name: Set variables fact
  ansible.builtin.set_fact:
    certmanager_vars: "{{ certmanager_vars }}"
  run_once: true
