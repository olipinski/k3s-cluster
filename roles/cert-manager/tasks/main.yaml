---
- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml
  any_errors_fatal: true

- name: Role Provisioning
  when: inventory_hostname in k3s_map.server.hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        timeout: 30
      any_errors_fatal: true

    - name: Validate Chart
      include_tasks: roles/_common/tasks/validate_chart.yaml
      vars:
        project_url: "{{ certmanager_project.url }}/{{ certmanager_project.tag }}"
        repository_name: "{{ certmanager_vars.kubernetes.helm.repository.org }}"
        repository_url: "{{ certmanager_vars.kubernetes.helm.repository.url }}"
        chart_name: "{{ certmanager_vars.kubernetes.helm.chart.name }}"
        chart_namespace: "{{ certmanager_vars.kubernetes.namespace }}"
        chart_version_value: "{{ certmanager_vars.kubernetes.helm.chart.version }}"

    - name: Set checksums fact
      ansible.builtin.uri:
        url: "{{ certmanager_project.release.url }}/{{ certmanager_project.release.checksum }}"
        return_content: true
      register: checksums
      delay: 1
      retries: 3
      until: checksums is not failed
      check_mode: false
      run_once: true

    - name: Set sha256 checksum fact
      ansible.builtin.set_fact:
        sha256_checksum: "{{ item.split(' ')[0] }}"
      loop: "{{ checksums.content.split('\n') }}"
      when: item | regex_search(certmanager_vars.release.file + '$')
      run_once: true

    - name: Install binary
      ansible.builtin.get_url:
        url: "{{ certmanager_project.release.url }}/{{ certmanager_project.release.file }}"
        checksum: sha256:{{ sha256_checksum }}
        dest: "{{ k3s_map.node.directory.bin }}/cmctl"
        owner: root
        group: root
        mode: "755"
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Create symlink
      ansible.builtin.file:
        path: "{{ k3s_map.node.directory.bin }}/kubectl-cert_manager"
        src: "{{ k3s_map.node.directory.bin }}/cmctl"
        state: link

    - name: Chart Setup
      run_once: true
      block:
        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            certmanager_postinstall: false

        - name: Install chart
          include_tasks: roles/_common/tasks/upgrade_chart.yaml
          vars:
            chart_ref: "{{ certmanager_map.helm.chart.reference }}"
            chart_version: "{{ certmanager_vars.kubernetes.helm.chart.version }}"
            chart_name: "{{ certmanager_vars.kubernetes.helm.chart.name }}"
            chart_namespace: "{{ certmanager_vars.kubernetes.namespace }}"
            chart_timeout: "{{ certmanager_map.helm.timeout }}"
            chart_values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"

        - name: Create self-signed cluster issuer
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'cluster_issuer.j2') | from_yaml }}"
            kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
            wait: true

        - name: Create wildcard certificate for internal domain
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'wildcard-internal-cert.j2') | from_yaml }}"
            kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
            wait: true
          when: global_map.services.wildcard_cert.enabled | default(true)

- name: Verify Cert-Manager Deployment
  run_once: true
  include_role:
    name: verification
  vars:
    component_name: "Cert-Manager Controller"
    component_namespace: "{{ certmanager_vars.kubernetes.namespace }}"
    component_type: "deployment"
    component_value: "{{ certmanager_vars.kubernetes.helm.chart.name }}"
    verification_retries: 40
    verification_delay: 15
  when:
    - inventory_hostname in k3s_map.server.hosts
    - lookup('env', 'SKIP_VERIFICATION') | default('false') | lower != 'true'
