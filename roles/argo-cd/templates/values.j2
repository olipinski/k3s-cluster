global:
  deploymentStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  domain: {{ argocd_map.gateway.server.hostname }}
{% endif %}
  logging:
    level: {{ argocd_vars.kubernetes.global.logging.level }}
applicationSet:
{% set component_monitoring_enabled = argocd_postinstall is truthy and argocd_map.metrics.service.monitor.enabled is truthy %}
{% set component_monitoring_interval = argocd_map.metrics.service.monitor.scrape.interval %}
{% set component_monitoring_timeout = argocd_map.metrics.service.monitor.scrape.timeout %}
{% include 'templates/common/monitoring.j2' %}

{% set component_pdb_max_unavailable = 1 %}
{% include 'templates/common/pdb.j2' %}

{% set component_resources_limits_cpu = argocd_vars.kubernetes.application_set.resources.limits.cpu %}
{% set component_resources_limits_memory = argocd_vars.kubernetes.application_set.resources.limits.memory %}
{% set component_resources_requests_cpu = argocd_vars.kubernetes.application_set.resources.requests.cpu %}
{% set component_resources_requests_memory = argocd_vars.kubernetes.application_set.resources.requests.memory %}
{% include 'templates/common/resources.j2' %}

  replicas: {{ argocd_vars.kubernetes.application_set.replicas }}
configs:
  cm:
{% for user in argocd_resources.server.users %}
    {{ '.'.join(['accounts', user.name]) | indent(4) }}: {{ user.permissions }}
    {{ '.'.join(['accounts', user.name, 'enabled']) | indent(4) }}: '{{ user.enabled | lower }}'
{% endfor %}
    {{ lookup('ansible.builtin.template', 'config_cm.j2') | trim | indent(4) }}
  params:
    {{ lookup('ansible.builtin.template', 'config_params.j2') | trim | indent(4) }}
  rbac:
    {{ lookup('ansible.builtin.template', 'config_rbac.j2') | trim | indent(4) }}
  secret:
    createSecret: false
controller:
  dynamicClusterDistribution: {{ argocd_vars.kubernetes.controller.dynamic_cluster_distribution.enabled | lower }}
{% set component_monitoring_enabled = argocd_postinstall is truthy and argocd_map.metrics.service.monitor.enabled is truthy %}
{% set component_monitoring_interval = argocd_map.metrics.service.monitor.scrape.interval %}
{% set component_monitoring_timeout = argocd_map.metrics.service.monitor.scrape.timeout %}
{% include 'templates/common/monitoring.j2' %}

{% set component_pdb_max_unavailable = 1 %}
{% include 'templates/common/pdb.j2' %}

{% set component_resources_limits_cpu = argocd_vars.kubernetes.controller.resources.limits.cpu %}
{% set component_resources_limits_memory = argocd_vars.kubernetes.controller.resources.limits.memory %}
{% set component_resources_requests_cpu = argocd_vars.kubernetes.controller.resources.requests.cpu %}
{% set component_resources_requests_memory = argocd_vars.kubernetes.controller.resources.requests.memory %}
{% include 'templates/common/resources.j2' %}

  replicas: {{ argocd_vars.kubernetes.controller.replicas }}

# Continue with other sections, using common templates where applicable
